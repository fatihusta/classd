#!/bin/dash

load_defaults()
{
    FAILD_BIND_PORT="3003"
    FAILD_CONF_FILE="/etc/untangle-faild.conf"
    FAILD_LOG_OUT="/var/log/untangle-faild/debug.log"
    FAILD_LOG_ERR="/var/log/untangle-faild/error.log"
    FAILD_LOG_MONITOR="/var/log/untangle-faild/monitor.log"
    FAILD_BIN=/usr/bin/faild

    FAILD_DEFAULTS_SCRIPT=${FAILD_DEFAULTS_SCRIPT:-/etc/default/untangle-faild}
    
    if [ -f ${FAILD_DEFAULTS_SCRIPT} ] ; then
        . ${FAILD_DEFAULTS_SCRIPT}
    fi

    ## These have to be exported so the children can see them.
    export HTTP_SCRIPT PING_SCRIPT DNS_SCRIPT ARP_SCRIPT
    export FAILD_LINK_STATUS_SCRIPT FAILD_LINK_STATUS_DIR
}

reap_child_hardest()
{
    reap_child 9
}

reap_child_harder()
{
    trap reap_child_hardest INT TERM USR1 USR2 QUIT
    reap_child 15
}

reap_child_easy()
{
    trap reap_child_harder INT TERM USR1 USR2 QUIT
    reap_child 2
}

reap_child()
{
    echo "[`date`] Received Signal      (monitor: $$) (faild: $FAILD_PID) (sending signal: $1) "

    if [ ! -z "$FAILD_PID" ] ; then
        echo "[`date`] Sending signal $1 to faild ($FAILD_PID)."
        kill -$1 ${FAILD_PID}
        wait ${FAILD_PID}
        echo "[`date`] Faild Stopped    (monitor: $$) (faild: $FAILD_PID)"
    fi

    exit 0
}

start_faild()
{
    load_defaults
    
    local t_args
    t_args="${FAILD_ARGS}"
    
    test -n "${FAILD_BIND_PORT}" && t_args="${t_args} -p ${FAILD_BIND_PORT}"
    test -n "${FAILD_CONF_FILE}" && t_args="${t_args} -c ${FAILD_CONF_FILE}"
    test -n "${FAILD_LOG_OUT}" && t_args="${t_args} -o ${FAILD_LOG_OUT}"
    test -n "${FAILD_LOG_ERR}" && t_args="${t_args} -e ${FAILD_LOG_ERR}"
    test -n "${FAILD_DEBUG_LEVEL}" && t_args="${t_args} -l ${FAILD_DEBUG_LEVEL}"
    test -n "${FAILD_LINK_STATUS_SCRIPT}" && t_args="${t_args} -s ${FAILD_LINK_STATUS_SCRIPT}"
    
    ${FAILD_BIN} ${t_args} &
    FAILD_PID=$!
    echo "[`date`] Started Faild    (monitor: $$) (faild: $FAILD_PID)"
}

## Start of script

load_defaults
mkdir -p `dirname ${FAILD_LOG_MONITOR}`
exec >> ${FAILD_LOG_MONITOR}  2>&1

trap reap_child_easy INT TERM USR1 USR2 QUIT

while ( true ) ;  do
    echo "[`date`] Starting Faild"

    start_faild
    sleep 2
    echo "[`date`] Monitoring Faild (monitor: $$) (faild: $FAILD_PID)"
    while ( true ) ; do
        wait $FAILD_PID
        
        ## Check if the proc directory is still around
        [ -d /proc/${FAILD_PID} ] || break
        sleep 0.5
    done
    
    echo "[`date`] Faild Died!      (monitor: $$) (faild: $FAILD_PID)"
done
