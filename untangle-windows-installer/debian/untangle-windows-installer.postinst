#!/bin/dash

ourInit() {
    if [ -x /usr/sbin/invoke-rc.d ] && [ ! "`readlink /usr/sbin/invoke-rc.d`" = /bin/true ] ; then
        invoke-rc.d $1 $2
    else
        /etc/init.d/$1 $2
    fi
}

update_menu_lst()
{
    local t_file
    local t_temp
    t_file="/boot/grub/menu.lst"
    
    [ ! -f "${t_file}" ] && {
        echo "[`date`] ${t_file} doesn't exists."
        return
    }
    
    grep -q "nosmp clocksource=jiffies"  "${t_file}" > /dev/null 2>&1 && {
        echo "[`date`] ${t_file} already has the current flags."
        return
    }
    
    t_temp=`mktemp`

    awk '/^(# kopt|kernel)/ { gsub( "nosmp", "" ) ; gsub( "clocksource=[^ ]*", "" ) ; gsub( "[ ]+", " " ) ; gsub( " +$", "" ) ; print $0 " nosmp clocksource=jiffies" ; next } ; { print }' "${t_file}" > "${t_temp}"

    ## Make a backup of the current menu.lst
    if [ -s "${t_temp}" ]; then
        cp "${t_file}" `date +"${t_file}_%y%m%d%H%M"`

        mv "${t_temp}" "${t_file}"
    else
        echo "[`date`] '${t_temp}' is empty." 
        rm -f "${t_temp}" 
    fi
}

INSTALL_DIR="/var/lib/untangle-windows-installer"

mkdir -p ${INSTALL_DIR}
INSTALL_MARKER=${INSTALL_DIR}/is_initialized

## Install to indicate this is the first install.
[ -f ${INSTALL_MARKER} ] || {
    ## Remove the persistent net file, this package is only used to
    ## provision the box and then it is removed.
    rm -f /etc/udev/rules.d/z25_persistent-net.rules

    ## Copy in the scripts for automatic configuration
    cp /usr/share/untangle-windows-installer/init/* ${INSTALL_DIR}
}

touch ${INSTALL_MARKER}

## Update the menu.lst
update_menu_lst

if [ -x "/etc/init.d/untangle-windows-installer" ]; then
    ## Moving the startup from its defaults to start later and stop earlier.
    update-rc.d -f untangle-windows-installer remove >/dev/null
    
    ## Start failry late, and stop fairly early.
    update-rc.d untangle-windows-installer defaults 96 4 >/dev/null
    
    ourInit untangle-windows-installer stop > /dev/null 2>&1 || exit 0
    ourInit untangle-windows-installer start || exit 0
fi

exit 0
