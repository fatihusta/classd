#!/bin/dash

UNTANGLE_SPLITD_QUEUE_NUM=3004
IPTABLES=${IPTABLES:-iptables}

debug()
{
    echo "[DEBUG:`date`] $*"
}

is_queue_open()
{
    local t_splitd_pid
    local t_queue_pid

    t_splitd_pid="invalid"
    
    if [ ! -f /proc/net/netfilter/nfnetlink_queue ] ; then return 1; fi

    t_queue_pid=`awk -v queue=${UNTANGLE_SPLITD_QUEUE_NUM} '{ if ( $1 == queue ) print $2 }' /proc/net/netfilter/nfnetlink_queue`
    if [ -z "${t_queue_pid}" ]; then return 1 ; fi
    
    t_splitd_pid=${t_queue_pid}
    
    grep -q splitd /proc/${t_splitd_pid}/cmdline 2>| /dev/null || return 1

    return 0
}

flush_splitd_iptables_rules()
{
    debug "Flushing splitd iptables rules..."
    ${IPTABLES} -t nat -F splitd-queue >/dev/null 2>&1
    ${IPTABLES} -t nat -F splitd-rules >/dev/null 2>&1 
    ${IPTABLES} -t nat -D PREROUTING -j splitd-queue >/dev/null 2>&1
    ${IPTABLES} -t nat -D PREROUTING -j splitd-rules >/dev/null 2>&1
    debug "Flushing splitd iptables rules... done"
}

insert_splitd_iptables_rules()
{
    debug "Inserting splitd iptables rules..."

    # Only capture traffic coming from non-WAN interfaces
    # Insert one rule for each non-WAN
    # Note: Ideally we would actually only capture traffic TO WAN interfaces, however the dst mark is not set yet in nat PREROUTING
    /usr/share/untangle-net-alpaca/scripts/uvm/netConfig.py non_wan_idx | while read intfId ; do
        local t_mark=$(( $intfId ))
    	local t_mask=$(( 0xff )) # MASK_SRC_INTERFACE
	
        ## Using alpaca-redirect because this guarantees this occurs
        ## before a redirect which is a terminating target.  Has to occur in NAT Prerouting
        ## because the decision must be made before routing.
	## ${IPTABLES} -t nat -A splitd-queue -m mark --mark ${t_mark}/${t_mask} -m addrtype --dst-type unicast -j NFQUEUE --queue-num ${UNTANGLE_SPLITD_QUEUE_NUM}
	${IPTABLES} -t nat -A splitd-queue -m mark --mark ${t_mark}/${t_mask} -m conntrack --ctstate NEW -m addrtype --dst-type unicast -j NFQUEUE --queue-num ${UNTANGLE_SPLITD_QUEUE_NUM}
    done	

    ${IPTABLES} -t nat -I PREROUTING 2 -j splitd-queue
    ${IPTABLES} -t nat -I PREROUTING 2 -j splitd-rules
    debug "Inserting splitd iptables rules... done"
}


## Start of script
if [ -f /etc/default/untangle-splitd ]; then 
    . /etc/default/untangle-splitd
fi

flush_splitd_iptables_rules

## If the queue is open generate the new rules
is_queue_open && {
    insert_splitd_iptables_rules
}

true
