#!/usr/bin/python

import sys;
import subprocess;
import simplejson as json

def center(str):
    if (len(str) >= 16):
        return str;
    padding = " " * ((16 - len(str))/2)
    return padding + str + padding

def runCmd(cmd):
    proc = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    std_out = proc.stdout.read();
    ret_code = proc.wait();
    return std_out.rstrip();

def interfaceIp(intfName):
    # FIXME must read status file and return current IP - not settings
    return "FIXME"
    netconf = json.loads(open('/usr/share/untangle/settings/untangle-vm/network.js', 'r').read())
    if netconf == None:
        exit(1);
    if netconf.get('interfaces') == None:
        exit(1);
    if netconf.get('interfaceList').get('list') == None:
        exit(1);
    for intfConf in netconf.get('interfaceList').get('list'):
        if (intfConf["name"] == None or intfConf["name"] != intfName):
            continue;
        if (intfConf.get("v4StaticAddress") != None):
            return intfConf["v4StaticAddress"]
        else:
            return intfConf.get("configType")

if (len(sys.argv) < 3):
    print "Usage ",sys.argv[0],": <page> <line>"
    sys.exit(1);

    proc = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    std_out = proc.stdout.read();
 
page = int(sys.argv[1])
line = int(sys.argv[2])

#print "Page: ",page
#print "Line: ",line

if (page == 0):
    if (line == 1):
        print "*** Untangle ***"
    else:
        print center(runCmd("hostname -s"))
elif (page == 1):
    if (line == 1):
        print "*** CPU Load ***"
    else:
        cpu1f = float(runCmd('cat /proc/loadavg | awk \'{print $1}\''))
        cpuCount = float(runCmd('cat /proc/cpuinfo | grep processor | wc -l'))
        cpuLoadText = "low"
        if (cpu1f - cpuCount > 1.0):
            cpuLoadText = "medium"
        if (cpu1f - cpuCount > 4.0):
            cpuLoadText = "high"
        print center(cpuLoadText + " (" + str(cpu1f) + ")")
elif (page == 2):
    if (line == 1):
        print "***  Memory  ***"
    else:
        used = float(runCmd('free -m | grep \'buffers/cache\' | awk \'{print $3}\''))
        free = float(runCmd('free -m | grep \'buffers/cache\' | awk \'{print $4}\''))
        totalGigs = str(int(round((used + free)/1000))) + " Gb"
        percentFree = str(int(round((free/(used + free))*100.0))) + "%"
        print center(totalGigs + " " + percentFree + " free")
elif (page == 3):
    if (line == 1):
        print "***   Disk   ***"
    else:
        diskSize = runCmd('df -h / | grep \'dev\' | awk \'{print $2}\'')
        percentUsed = float(runCmd('df -h / | grep \'dev\' | awk \'{print $5}\'').strip("%"))
        percentFree = str(100.0 - percentUsed) + "%"
        print center(diskSize + " " + percentFree + " free")
elif (page == 4):
    if (line == 1):
        print "*** External ***"
    else:
        print center(interfaceIp("External")) # FIXME - hardcoded name - show first WAN
elif (page == 5):
    if (line == 1):
        print "*** Internal ***"
    else:
        print center(interfaceIp("Internal")) # FIXME - hardcoded name - show first non-WAN
elif (page == 6):
    if (line == 1):
        print "***   UID    ***"
    else:
        uid = runCmd(' cat /usr/share/untangle/conf/uid | sed -e \'s/-//g\' ')
        print center(uid)

                       
    
