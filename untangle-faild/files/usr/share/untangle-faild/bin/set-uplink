#!/bin/dash

UNTANGLE_PRIORITY_BASE="36"
UNTANGLE_PRIORITY_DEFAULT="${UNTANGLE_PRIORITY_BASE}900"

update_default_link_rule()
{
    local t_active_link
    local t_is_current
    
    t_active_link=$1
    t_is_current=`ip rule show | grep "^${UNTANGLE_PRIORITY_DEFAULT}:\s*from all lookup uplink.${t_active_link} *\$" | wc -l`

    if [ "${t_is_current}" = "1" ]; then
        echo "[DEBUG:`date`] Uplink is up to date"
        return
    fi
    
    ## Delete the default rules (ip lets you have two rules with the same priority)
    for t in `ip rule show | awk "/^${UNTANGLE_PRIORITY_DEFAULT}/ { print \"a\" }"`; do
        ip rule del priority ${UNTANGLE_PRIORITY_DEFAULT}
    done
    
    printf "[DEBUG:`date`] Bringing up uplink.%d\n" ${t_active_link}
    
    ## Use printf to get rid of the spacing
    ip rule add priority ${UNTANGLE_PRIORITY_DEFAULT} lookup `printf "uplink.%d" ${FAILD_UPLINK_ACTIVE}`
}

update_dns_servers()
{
    local t_active_link
    local t_uplink
    local t_offline_links
    local t_online_links

    local t_temp

    t_active_link=$1

    t_temp=`mktemp`

    for t_uplink in ${FAILD_UPLINKS_ONLINE} ${t_active_link} ; do
        if [ -n "${t_online_links}" ]; then t_online_links="${t_online_links}|" ; fi
        t_online_links="${t_online_links}uplink.${t_uplink}"
    done
        
    for t_uplink in ${FAILD_UPLINKS_OFFLINE} ; do
        if [ -n "${t_offline_links}" ]; then t_offline_links="${t_offline_links}|" ; fi
        t_offline_links="${t_offline_links}uplink.${t_uplink}"
    done
    
    awk '/^(# *)?server=.*('${t_online_links}')$/ { sub( /^(# *)?/, "" ) ; print ; next } ; /^(# *)?server=.*('${t_offline_links}')$/ { sub( /^(# *)?/, "# " ) ; print ; next } ;  { print } ' /etc/dnsmasq.conf >> ${t_temp}

    diff -q ${t_temp} /etc/dnsmasq.conf > /dev/null || {
        mv ${t_temp} /etc/dnsmasq.conf
        chmod 664 /etc/dnsmasq.conf
        /etc/init.d/dnsmasq restart
        exit 0
    }
    
    echo "[DEBUG:`date`] DNS File is up to date."
    rm -f ${t_temp}
}

## Start of script

active_link=${FAILD_UPLINK_ACTIVE}

if [ -z "${active_link}" ] ; then
    echo "[DEBUG:`date`] No uplinks are active, using first available link"
    active_link=`printf "%s" ${FAILD_UPLINKS}`
fi

if [ -z "${active_link}" ] ; then
    echo "[DEBUG:`date`] No uplinks, unable to bring up link."
    exit 0
fi

update_default_link_rule ${active_link}

update_dns_servers ${active_link}

/bin/true
