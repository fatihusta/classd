diff -ur bcti-sdk-linux-5.27.1.orig/src/Daemon/Daemon.cpp bcti-sdk-linux-5.27.1/src/Daemon/Daemon.cpp
--- bcti-sdk-linux-5.27.1.orig/src/Daemon/Daemon.cpp	2019-04-23 06:57:55.000000000 -0700
+++ bcti-sdk-linux-5.27.1/src/Daemon/Daemon.cpp	2019-04-23 07:29:47.000000000 -0700
@@ -131,6 +131,10 @@
 			r.Number("type", (size_t)config->GetUrlDatabaseType());
 			r.StringFormattedEntry("version", "%d.%d.%d", major, minor, update);
 			r.Number("update_frequency_mins", config->GetUrlUpdateTimeMins());
+			r.Number("url_cache_maximum_size", config->GetUrlCacheSizeMB() * 1048576);
+			int cacheCount = 0;
+			GetUrlCacheRecordCount(cacheCount);
+			r.Number("url_cache_current_size", cacheCount);
 		}
 		r.EndScope();
 
diff -ur bcti-sdk-linux-5.27.1.orig/src/Daemon/DaemonUrl.cpp bcti-sdk-linux-5.27.1/src/Daemon/DaemonUrl.cpp
--- bcti-sdk-linux-5.27.1.orig/src/Daemon/DaemonUrl.cpp	2019-04-03 14:00:29.000000000 -0700
+++ bcti-sdk-linux-5.27.1/src/Daemon/DaemonUrl.cpp	2019-04-23 07:42:03.000000000 -0700
@@ -226,4 +226,20 @@
 		PrepUrlItem, 0, LookupWhoisBasic, OutputWhoisBasicItem,
 		timeOperation, tag);
 }
+
+DAEMON_SDK_DEFN(DaemonUrl::SetUrlCacheClear)
+{
+	CHECK_JSON("")
+
+	if (Isis::SetUrlCacheClear())
+	{
+		r.StartObject();
+		{
+			r.Bool("cleared", true);
+		}
+		r.EndScope(true);
+	}
+	else
+		r.EndScopesWithError("cache clear failure");
+}
 }
diff -ur bcti-sdk-linux-5.27.1.orig/src/Daemon/DaemonUrl.h bcti-sdk-linux-5.27.1/src/Daemon/DaemonUrl.h
--- bcti-sdk-linux-5.27.1.orig/src/Daemon/DaemonUrl.h	2019-04-03 14:00:29.000000000 -0700
+++ bcti-sdk-linux-5.27.1/src/Daemon/DaemonUrl.h	2019-04-23 07:40:24.000000000 -0700
@@ -37,6 +37,7 @@
 	DAEMON_SDK_DECL(GetUrlInfo);
 	DAEMON_SDK_DECL(GetUrlReputation);
 	DAEMON_SDK_DECL(GetUrlWhoIs);
+	DAEMON_SDK_DECL(SetUrlCacheClear);
 };
 }
 #endif	// #define DaemonUrl_h
diff -ur bcti-sdk-linux-5.27.1.orig/src/Daemon/main.cpp bcti-sdk-linux-5.27.1/src/Daemon/main.cpp
--- bcti-sdk-linux-5.27.1.orig/src/Daemon/main.cpp	2019-04-22 12:52:58.000000000 -0700
+++ bcti-sdk-linux-5.27.1/src/Daemon/main.cpp	2019-04-23 07:41:58.000000000 -0700
@@ -410,6 +410,7 @@
 	s_sdkFns["url/submitphishquery"] = DaemonPhishing::SubmitPhishingQuery;
 	s_sdkFns["url/getwhoisinfo"] = DaemonUrl::GetUrlWhoIs;
 	s_sdkFns["url/getcatlist"] = DaemonUrl::GetUrlCategories;
+	s_sdkFns["url/setcacheclear"] = DaemonUrl::SetUrlCacheClear;
 	s_sdkFns["counters"] = Daemon::GetStatsCounters;
 	s_sdkFns["status"] = Daemon::GetStatus;
 
diff -ur bcti-sdk-linux-5.27.1.orig/src/IsisSdkUrl/IsisSdkUrl.cpp bcti-sdk-linux-5.27.1/src/IsisSdkUrl/IsisSdkUrl.cpp
--- bcti-sdk-linux-5.27.1.orig/src/IsisSdkUrl/IsisSdkUrl.cpp	2019-04-03 14:00:29.000000000 -0700
+++ bcti-sdk-linux-5.27.1/src/IsisSdkUrl/IsisSdkUrl.cpp	2019-04-23 07:29:06.000000000 -0700
@@ -304,5 +304,23 @@
 	UrlDbManager::Instance()->LoadExisting();
 	return true;
 }
+
+bool GetUrlCacheRecordCount(int& count)
+{
+	count = 0;
+	if (!Configuration::Instance()->UrlEnabled())
+		return false;
+	count = UrlCache::Instance()->GetCacheRecordCount();
+	return true;
+}
+
+bool SetUrlCacheClear()
+{
+	if (!Configuration::Instance()->UrlEnabled())
+		return false;
+	UrlCache::Instance()->Initialize();
+	return true;
+}
+
 } // namespace Isis
 
diff -ur bcti-sdk-linux-5.27.1.orig/src/IsisSdkUrl/IsisSdkUrl.h bcti-sdk-linux-5.27.1/src/IsisSdkUrl/IsisSdkUrl.h
--- bcti-sdk-linux-5.27.1.orig/src/IsisSdkUrl/IsisSdkUrl.h	2019-04-03 14:00:29.000000000 -0700
+++ bcti-sdk-linux-5.27.1/src/IsisSdkUrl/IsisSdkUrl.h	2019-04-23 07:29:10.000000000 -0700
@@ -351,6 +351,18 @@
 	Returns true and the version numbers if a database is loaded
 */
 ISISAPI bool GetUrlDatabaseVersion(int& major, int& minor, int& update);
+
+//! GetUrlCacheRecordCount
+/*!
+	Returns true and the current number of entries in the cache.
+*/
+ISISAPI bool GetUrlCacheRecordCount(int& count);
+
+//! SetUrlCacheClear
+/*!
++	Clear URL cache
++*/
+ISISAPI bool SetUrlCacheClear();
 } // namespace Isis
 
 #endif // IsisSdk_IsisSdkUrl_h
