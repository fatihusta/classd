## ------------------------------------------------------------
## This file is read by both the classd daemon and all of the
## supporting script files so try not to do anything stupid 
## that might break the scripts or the app parsing logic.
## ------------------------------------------------------------

## Directory where the classd log files are created
#CLASSD_LOG_PATH=/var/log/untangle-classd

## Name of the main classd log file
#CLASSD_LOG_FILE=/var/log/untangle-classd/classd.log

## Directory for debug dump files
#CLASSD_DUMP_PATH=/tmp

## Directory for crash dump core files
#CLASSD_CORE_PATH=/usr/share/untangle-classd

## Directory where the vineyard navl library plugins are located
#CLASSD_PLUGIN_PATH=/usr/share/untangle-classd/plugins

## Flag to enable the vineyard library debug logging
#CLASSD_LIBRARY_DEBUG=0

## Maximum kB of VmRSS memory we are allowed to consume before we
## assume something has gone haywire and force a daemon restart
#CLASSD_MEMORY_LIMIT=262144

## Number of hash buckets for the status and lookup tables
## This needs to be a prime number at least as large as the total number
## number of TCP and UDP sessions expected to be active at any given time
#CLASSD_HASH_BUCKETS=99991

## Maximum connection count value passed in the call to navl_open
#CLASSD_MAX_FLOWS=32768

## Flag to enable IP fragment processing in the navl library
#CLASSD_IP_DEFRAG=1

## Sets the SO_RCVBUF size for the filter queue socket
#CLASSD_SOCK_BUFFER=1048576

## Sets the timeout for TCP sessions
#CLASSD_TCP_TIMEOUT=60

## Sets the timeout for UDP sessions
#CLASSD_UDP_TIMEOUT=60

## Sets the number of HTTP request/response pairs to analyze
## before giving up.  Can be 1 thru 99 or 0 for unlimited
#CLASSD_HTTP_LIMIT=0

## Sets the purge delay for closed sessions
#CLASSD_PURGE_DELAY=30

## Sets the port where classd listens for connections
## from classification clients
#CLASSD_CLIENT_PORT=8123

## Network filter queue the daemon should use
#CLASSD_QUEUE_NUM=1967

## Sets the value passed to nfq_set_queue_maxlen
#CLASSD_QUEUE_MAXLEN=10240

## Sets the size of the network packet buffer.  I would guess
## this needs be large enough for the highest MTU which could
## be greater than 1500 on a gigabit link with jumbo frames
#CLASSD_QUEUE_BUFFER=32768

## Enable to use a seperate thread and message queue to handle
## classification of network packets.  Disable to have the
## classify function called directly from the nfqueue handler.
#CLASSD_PACKET_THREAD=1

## Maximum number of seconds a packet can wait in our classify
## queue before we consider it stale and throw it away
#CLASSD_PACKET_TIMEOUT=4

## This sets the absolute maximum number of packets that can
## pile up in the classify queue before we start throwing
## them on the floor.  Mainly a worst case failsafe thing.
#CLASSD_PACKET_MAXIMUM=1000000

## Flag to enable facebook subclassification.
#CLASSD_FACEBOOK_SUBCLASS=1

## Number of Skype probes we must reeive before identifying
## an address/port pair as Skype traffic
#CLASSD_SKYPE_PROBE_THRESH=2

## Number of packets to sample before calculating Skype
## behavioral results.
#CLASSD_SKYPE_PACKET_THRESH=4

## Set the detection threshold based on randomness of data
## measured in a flow being inspected by Skype.  Use a value
## between 0 and 100.  Lower values = more aggressive detection.
#CLASSD_SKYPE_RANDOM_THRESH=95

## Flag to determine if hosts in a transaction must have
## previous Skype history before doing behavioral sampling.
#CLASSD_SKYPE_REQUIRE_HISTORY=1

## Path to the classd binary
#CLASSD_BIN=/usr/bin/classd

## Additional flags to pass on the command line
## Use -d to enable all debug log messages or
## you can use a mix of the following bit values
## -d1 = application logic
## -d2 = client/server requests from the uvm
## -d4 = classifcation object create/update/expire
## -d8 = packets submitted for classification
## -d16 = session object lookup and processing
## -d32 = conntrack object lookup processing
#CLASSD_FLAGS=-d
