#!/bin/dash

UNTANGLE_PRIORITY_BASE="36"
UNTANGLE_PRIORITY_SPLITD="366"

UNTANGLE_SPLITD_SHIFT=9
UNTANGLE_SPLITD_MASK=0xE00

UNTANGLE_SPLITD_QUEUE_NUM=3004

IP_RT_TABLE_BASE=64

IPTABLES=${IPTABLES:-iptables}

debug()
{
    echo "[DEBUG:`date`] $*"
}

is_queue_open()
{
    local t_splitd_pid
    local t_queue_pid

    t_splitd_pid="invalid"
    
    if [ ! -f /proc/net/netfilter/nfnetlink_queue ] ; then return 1; fi

    t_queue_pid=`awk -v queue=${UNTANGLE_SPLITD_QUEUE_NUM} '{ if ( $1 == queue ) print $2 }' /proc/net/netfilter/nfnetlink_queue`
    if [ -z "${t_queue_pid}" ]; then return 1 ; fi
    
    t_splitd_pid=${t_queue_pid}
    
    grep -q splitd /proc/${t_splitd_pid}/cmdline 2>| /dev/null || return 1

    return 0
}

insert_splitd_iptables_rules()
{
    ## Using alpaca-redirect because this guarantees this occurs
    ## before a redirect which is a terminating target.  Has to occur in NAT Prerouting
    ## because the decision must be made before routing.
    ${IPTABLES} -t nat -I alpaca-redirect 1 -m addrtype --dst-type unicast -j NFQUEUE --queue-num ${UNTANGLE_SPLITD_QUEUE_NUM}
}


## Start of script
if [ -f /etc/default/untangle-shield ]; then 
    . /etc/default/untangle-shield
fi


## If the queue is not open, flush the rules and exit
is_queue_open || {
    exit 0
}

insert_splitd_iptables_rules
