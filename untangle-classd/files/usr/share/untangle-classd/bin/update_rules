#!/bin/dash

CLASSD_QUEUE_NUM=1967

IPTABLES=${IPTABLES:-iptables}
TABLE_NAME=mangle
CHAIN_NAME=untangle-classd

debug()
{
    echo "[DEBUG:`date`] $*"
}

is_queue_open()
{
    local t_classd_pid
    local t_queue_pid

    t_classd_pid="invalid"

    if [ ! -f /proc/net/netfilter/nfnetlink_queue ]; then
        echo "[`date`] The netfilter nfnetlink_queue does not exist - not inserting rules for classd"
        return 1
    fi

    t_queue_pid=`awk -v queue=${CLASSD_QUEUE_NUM} '{ if ( $1 == queue ) print $2 }' /proc/net/netfilter/nfnetlink_queue`

    if [ -z "${t_queue_pid}" ]; then
        echo "[`date`] The classd netfilter queue is not open - not inserting rules for classd"
        return 1
    fi

    t_classd_pid=${t_queue_pid}

    t_classd_cmd=`grep -c classd /proc/${t_classd_pid}/cmdline 2>| /dev/null`

    if [ $((t_classd_cmd)) -eq 0 ]; then
        echo "[`date`] Something other than classd seems to own the queue: `cat /proc/${t_classd_pid}/cmdline`"
    fi

    return 0
}

flush_classd_iptables_rules()
{
    # create and flush a new chain for our traffic
    ${IPTABLES} -t ${TABLE_NAME} -N ${CHAIN_NAME} >/dev/null 2>&1
    ${IPTABLES} -t ${TABLE_NAME} -F ${CHAIN_NAME}

    # remove previous rules to call the chain if they exist
    ${IPTABLES} -t ${TABLE_NAME} -D PREROUTING -m mark --mark 0x00000000/0x01000000 -j ${CHAIN_NAME} >/dev/null 2>&1
    ${IPTABLES} -t ${TABLE_NAME} -D OUTPUT -j ${CHAIN_NAME} >/dev/null 2>&1
}

insert_classd_iptables_rules()
{
    # we don't care about traffic to or from loopback addresses
    ${IPTABLES} -t ${TABLE_NAME} -A ${CHAIN_NAME} -s 127.0.0.0/8 -j RETURN
    ${IPTABLES} -t ${TABLE_NAME} -A ${CHAIN_NAME} -d 127.0.0.0/8 -j RETURN

    # we also don't want to look at any traffic owned by the local machine
    ${IPTABLES} -t ${TABLE_NAME} -A ${CHAIN_NAME} -m addrtype --dst-type local -j RETURN

    # special hook to allow bypass of a development machine or network
    if [ ! -z ${CLASSD_DEV_NETWORK} ]; then
        ${IPTABLES} -t ${TABLE_NAME} -A ${CHAIN_NAME} -s ${CLASSD_DEV_NETWORK} -j RETURN
        ${IPTABLES} -t ${TABLE_NAME} -A ${CHAIN_NAME} -d ${CLASSD_DEV_NETWORK} -j RETURN
    fi

    # all other TCP and UDP traffic will be handed off to our netfilter queue
    ${IPTABLES} -t ${TABLE_NAME} -A ${CHAIN_NAME} -p tcp -j NFQUEUE --queue-num ${CLASSD_QUEUE_NUM}
    ${IPTABLES} -t ${TABLE_NAME} -A ${CHAIN_NAME} -p udp -j NFQUEUE --queue-num ${CLASSD_QUEUE_NUM}

    # ----- now that we have created our table we need some rules to send us traffic
    # ----- these next rules will grab only traffic that we need to classify

    # capture all prerouting traffic except stuff with BYPASS set in the mark
    ${IPTABLES} -t ${TABLE_NAME} -A PREROUTING -m mark --mark 0x00000000/0x01000000 -j ${CHAIN_NAME}

    # capture all output traffic
    ${IPTABLES} -t ${TABLE_NAME} -A OUTPUT -j ${CHAIN_NAME}

    return 0
}

## Start of script
if [ -f /etc/default/untangle-classd ]; then
    . /etc/default/untangle-classd
fi

## If the queue is open generate the new rules
flush_classd_iptables_rules

is_queue_open && {
    echo "[`date`] The untangle-classd is running. Inserting rules."
    insert_classd_iptables_rules
}

true

